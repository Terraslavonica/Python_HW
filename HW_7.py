## Task 1. Создайте 3 тэмплэйта (возьмите .format() или f-строки), используя побольше возможностей (padding, округление)
# и заполните их пару раз (6 баллов)


## Task 2. Сделайте несколько распаковок произвольных списков/кортежей в переменные (3 балла)



## Task 3. Напишите следующие comprehension'ы:
au_carre = [x*x for x in range(11)]  # квадраты чисел от 0 до 10
print(au_carre)

# суммы 2-ух чисел, взятых из последовательностей от 0 до 3 и от 5 до 8
somme_de_deux = [x+y for y in range(5, 9) for x in range(0, 4)]
print(somme_de_deux)
# [5, 6, 7, 8, 6, 7, 8, 9, 7, 8, 9, 10, 8, 9, 10, 11] ## Это ведь не то, что нужно? Нужно [5, 7, 9, 11] ??
a = range(0, 3)

# строки, представляющие переходы из одних нуклеотидов в другие 'A->T', 'A->C', 'A->G', 'T->A', ...
v = ["A", "T", "G", "C"]
my_str = [print(i + '->'+ j) for i in v for j in v if i!=j]

# вложенные списки, представляющие матрицу 3 на 3, заполненную от 0 до 9
matrix = [[i+j for i in range(1, 4)] for j in range(0, 7, 3)]
print(matrix)


## Task 4. Имплементируйте линейный поиск (принимает на вход элемент и список, возвращает индекс с этим элементом) (10 баллов)


## Task 5. *Имплементируйте бинарный поиск (принимает на вход элемент и отсортированный список,
# возвращает индекс с этим элементом) (15 баллов)